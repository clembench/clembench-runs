{
  "game_id": 12,
  "Prompt": "Please help me with the following task. The goal is to explore rooms and find the target room. In each room, you need to decide the direction to go in. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. Most importantly, once we have found the target room, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nThe target room is a Bedroom. You are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. The target room is $GOAL$. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?\n",
  "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?",
  "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?",
  "Move_Construction": "^GO:\\s*(north|east|west|south)$",
  "Stop_Construction": "^DONE$",
  "Grid_Dimension": "4",
  "Graph_Nodes": "['Craft room', 'Living room', 'Exercise room', 'Study room', 'Sauna', 'Conservatory', 'Wine cellar', 'Guest room']",
  "Graph_Edges": "[('Craft room', 'Living room'), ('Living room', 'Exercise room'), ('Exercise room', 'Study room'), ('Study room', 'Sauna'), ('Sauna', 'Conservatory'), ('Conservatory', 'Wine cellar'), ('Wine cellar', 'Guest room')]",
  "Current_Position": "Craft room",
  "Picture_Name": "graph_7941.png",
  "Directions": "[('Craft room', ['west']), ('Living room', ['west', 'east']), ('Exercise room', ['west', 'east']), ('Study room', ['north', 'east']), ('Sauna', ['north', 'south']), ('Conservatory', ['north', 'south']), ('Wine cellar', ['south', 'east']), ('Guest room', ['west'])]",
  "Moves": "[{'node': 'Craft room', 'node_moves': [('west', 'Living room')]}, {'node': 'Living room', 'node_moves': [('west', 'Exercise room'), ('east', 'Craft room')]}, {'node': 'Living room', 'node_moves': [('west', 'Exercise room'), ('east', 'Craft room')]}, {'node': 'Exercise room', 'node_moves': [('west', 'Study room'), ('east', 'Living room')]}, {'node': 'Exercise room', 'node_moves': [('west', 'Study room'), ('east', 'Living room')]}, {'node': 'Study room', 'node_moves': [('north', 'Sauna'), ('east', 'Exercise room')]}, {'node': 'Study room', 'node_moves': [('north', 'Sauna'), ('east', 'Exercise room')]}, {'node': 'Sauna', 'node_moves': [('north', 'Conservatory'), ('south', 'Study room')]}, {'node': 'Sauna', 'node_moves': [('north', 'Conservatory'), ('south', 'Study room')]}, {'node': 'Conservatory', 'node_moves': [('north', 'Wine cellar'), ('south', 'Sauna')]}, {'node': 'Conservatory', 'node_moves': [('north', 'Wine cellar'), ('south', 'Sauna')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Conservatory'), ('east', 'Guest room')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Conservatory'), ('east', 'Guest room')]}, {'node': 'Guest room', 'node_moves': [('west', 'Wine cellar')]}]",
  "Cycle": "cycle_false",
  "Ambiguity": null,
  "Game_Type": "named_graph",
  "Loop_Reminder": false,
  "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.",
  "Max_Turns_Reminder": false,
  "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.",
  "Mapping": "{(3, 0): 'Craft room', (2, 0): 'Living room', (1, 0): 'Exercise room', (0, 0): 'Study room', (0, 1): 'Sauna', (0, 2): 'Conservatory', (0, 3): 'Wine cellar', (1, 3): 'Guest room'}",
  "Strict": true,
  "Specific_Room": "Exercise room",
  "Specific_Room_Distance": "2"
}